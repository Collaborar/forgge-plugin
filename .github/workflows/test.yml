name: Tests

on: push

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        php-versions: [ '8.2', '8.1' ]
        include:
          - php-versions: '8.3'
            build-assets: 1

    steps:
      - uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-${{ matrix.php-versions }}

      - name: Install dependencies
        run: composer update --prefer-dist --no-progress

      - name: Install Test Environment
        run: composer run install-test-env

      - name: Validate PHP syntax Part 1
        # The usage of bash + || exit 1 is to ensure xargs does not exit on first error.
        run: find ./ -maxdepth 1 -name '*.php' | xargs -n1 bash -c 'php -lf $0 || exit 1'

      - name: Validate PHP syntax Part 2
        # The usage of bash + || exit 1 is to ensure xargs does not exit on first error.
        run: find app/ views/ \( -name '*.php' \) | xargs -n1 bash -c 'php -lf $0 || exit 1'

      - name: Install Node.js
        if: ${{ matrix.build-assets }}
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Node dependencies
        if: ${{ matrix.build-assets }}
        run: yarn install

      - name: Build assets
        if: ${{ matrix.build-assets }}
        run: yarn build

      - name: Lint assets
        if: ${{ matrix.build-assets }}
        run: yarn lint
